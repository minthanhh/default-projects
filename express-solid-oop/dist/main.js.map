{"version":3,"sources":["../src/main.ts"],"sourcesContent":["import 'reflect-metadata';\r\nimport { createServer } from 'http';\r\nimport express, { Handler, Application as ExpressApp } from 'express';\r\nimport AppSettings from './configs/app-setting';\r\nimport { AuthController } from './apis/auth/auth.controller';\r\nimport { MetadataKeys } from './shared/metadata/metadata.keys';\r\nimport { IRouter } from './shared/decorators/handlers.decorator';\r\n\r\nnamespace Main {\r\n   export class Application {\r\n      static instance: Application;\r\n      private app: ExpressApp;\r\n\r\n      constructor() {\r\n         this.app = express();\r\n         this.startHttpServer();\r\n         this.setupRoutes([AuthController]);\r\n      }\r\n\r\n      private setupRoutes(controllers: any[]) {\r\n         const info: Array<{ api: string; handler: string }> = [];\r\n\r\n         controllers.forEach((Controller) => {\r\n            const controllerInstance: { [handleName: string]: Handler } =\r\n               new Controller();\r\n\r\n            const basePath: string = Reflect.getMetadata(\r\n               MetadataKeys.BASE_PATH,\r\n               Controller\r\n            );\r\n            const routers: IRouter[] = Reflect.getMetadata(\r\n               MetadataKeys.ROUTERS,\r\n               Controller\r\n            );\r\n\r\n            console.log(controllerInstance, routers, basePath);\r\n\r\n            const expressRouter = express.Router();\r\n\r\n            // routers.forEach(\r\n            //    ({ method, handlerPath, middlewares, handlerName }) => {\r\n            //       if (middlewares) {\r\n            //          expressRouter[method](\r\n            //             handlerPath,\r\n            //             ...middlewares,\r\n            //             controllerInstance[String(handlerName)].bind(\r\n            //                controllerInstance\r\n            //             )\r\n            //          );\r\n            //       } else {\r\n            //          expressRouter[method](\r\n            //             handlerPath,\r\n            //             controllerInstance[String(handlerName)].bind(\r\n            //                controllerInstance\r\n            //             )\r\n            //          );\r\n            //       }\r\n\r\n            //       info.push({\r\n            //          api: `${method.toLocaleLowerCase()} ${\r\n            //             basePath + handlerPath\r\n            //          }`,\r\n            //          handler: `${Controller.name}.${String(handlerName)}`,\r\n            //       });\r\n            //    }\r\n            // );\r\n\r\n            // this.app.use(basePath, expressRouter);\r\n         });\r\n\r\n         console.table(info);\r\n      }\r\n\r\n      startHttpServer() {\r\n         const httpServer = createServer(this.app);\r\n         return httpServer.listen(AppSettings.PORT, () =>\r\n            console.log('Application has been initialized')\r\n         );\r\n      }\r\n\r\n      static getInstance() {\r\n         if (!this.instance) {\r\n            this.instance = new Application();\r\n         }\r\n         return this.instance;\r\n      }\r\n   }\r\n}\r\n\r\nMain.Application.getInstance();\r\n"],"names":["Main","Application","setupRoutes","controllers","forEach","Controller","controllerInstance","basePath","Reflect","getMetadata","MetadataKeys","BASE_PATH","routers","ROUTERS","console","log","express","Router","table","startHttpServer","httpServer","createServer","app","listen","AppSettings","PORT","getInstance","instance","constructor","AuthController"],"mappings":"qUAC6B,2GAC+B,kHAFrD,2EAGiB,kDACO,qDACF,6CAGnBA,GACA,MAAMC,EAUV,AAAQC,YAAYC,CAAkB,CAAE,CAGrCA,EAAYC,OAAO,CAAC,AAACC,IAClB,IAAMC,EACH,IAAID,EAEDE,EAAmBC,QAAQC,WAAW,CACzCC,0BAAY,CAACC,SAAS,CACtBN,GAEGO,EAAqBJ,QAAQC,WAAW,CAC3CC,0BAAY,CAACG,OAAO,CACpBR,GAGHS,QAAQC,GAAG,CAACT,EAAoBM,EAASL,GAEnBS,kBAAO,CAACC,MAAM,EA+BvC,GA7BG,mBAAmB;AACnB,8DAA8D;AAC9D,2BAA2B;AAC3B,kCAAkC;AAClC,2BAA2B;AAC3B,8BAA8B;AAC9B,4DAA4D;AAC5D,oCAAoC;AACpC,gBAAgB;AAChB,cAAc;AACd,iBAAiB;AACjB,kCAAkC;AAClC,2BAA2B;AAC3B,4DAA4D;AAC5D,oCAAoC;AACpC,gBAAgB;AAChB,cAAc;AACd,UAAU;AAEV,oBAAoB;AACpB,kDAAkD;AAClD,qCAAqC;AACrC,eAAe;AACf,iEAAiE;AACjE,YAAY;AACZ,OAAO;AACP,KAAK;AAEL,yCAAyC;AAG5CH,QAAQI,KAAK,CAlDyC,EAAE,CAmD3D,CAEAC,iBAAkB,CACf,IAAMC,EAAaC,GAAAA,oBAAY,EAAC,IAAI,CAACC,GAAG,EACxC,OAAOF,EAAWG,MAAM,CAACC,mBAAW,CAACC,IAAI,CAAE,IACxCX,QAAQC,GAAG,CAAC,oCAElB,CAEA,OAAOW,aAAc,CAIlB,OAHK,IAAI,CAACC,QAAQ,EACf,CAAA,IAAI,CAACA,QAAQ,CAAG,IAAI1B,CAAY,EAE5B,IAAI,CAAC0B,QAAQ,AACvB,CAxEAC,aAAc,CAFd,0BAAQN,MAAR,KAAA,GAGG,IAAI,CAACA,GAAG,CAAGN,GAAAA,kBAAO,IAClB,IAAI,CAACG,eAAe,GACpB,IAAI,CAACjB,WAAW,CAAC,CAAC2B,8BAAc,CAAC,CACpC,CAqEH,CA5EG,qBADU5B,EACH0B,WAAP,KAAA,KADU1B,YAAAA,CA8EhB,EA/EUD,OAAAA,UAiFVA,KAAKC,WAAW,CAACyB,WAAW"}